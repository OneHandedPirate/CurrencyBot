import telebot
import logging
import asyncio
from config import keys, WELCOME
from extensions import Exchange, Kbds, News, APIException
from botToken import BOT_TOKEN
from telebot.async_telebot import AsyncTeleBot


bot = AsyncTeleBot(BOT_TOKEN)   #–≤—ã–±—Ä–∞–ª –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞, —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ.
logger = telebot.logger.setLevel(logging.DEBUG)

@bot.message_handler(commands=['start', 'help'])
async def welcome(message):
    await bot.reply_to(message, WELCOME, reply_markup=Kbds.get_replykbd())

@bot.message_handler(commands=['value'])
async def value(message):
    val = '–í–∞–ª—é—Ç—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:\n\n'
    val += '\n'.join([i for i in keys.keys()])
    await bot.send_message(message.chat.id, val)


@bot.message_handler(content_types=['text'])
async def handl(message):
    if message.text == 'üìà –ö—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç':
        await bot.send_message(message.chat.id, Exchange.get_dayly_rates(), parse_mode='HTML')
    elif message.text == 'üì∞ –ù–æ–≤–æ—Å—Ç–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤':
        await News.get_news(bot, message)
    else:
        try:
            await bot.reply_to(message, Exchange.get_price(message.text))
        except APIException as e:
            await bot.reply_to(message, f'‚õî –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n\n{e}')
        except Exception as e:
            await bot.reply_to(message, f'‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')

@bot.callback_query_handler(func=lambda call: True)
async def callback(call):
    if call.data == 'back':
        await News.back(bot, call)
    else:
        await News.get_text(bot, call)


if __name__ == '__main__':
    asyncio.run(bot.polling())

