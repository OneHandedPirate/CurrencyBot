import json
import requests
from bs4 import BeautifulSoup
from config import keys, HEADERS
from telebot import types


class APIException(Exception):
    pass


class Exchange:
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ keys.
    @staticmethod
    def get_dayly_rates():
        response = requests.get('https://www.cbr-xml-daily.ru/latest.js').text
        js = (json.loads(response))
        date = '.'.join(js['date'].split('-')[::-1])
        r = js['rates']
        rates = []
        for i, v in r.items():
            for cur in keys.values():
                if i in cur[0]:
                    rates.append(str(round(1 / v, 2)) + '—Ä.')
        text = f'<b>–í–æ—Ç –∫—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç (–¶–ë) –∫ —Ä—É–±–ª—é –Ω–∞ {date}:</b>\n\n'
        for v, i in dict(zip(rates, keys.values())).items():
            #—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –≤–∏–¥–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã—Ä–æ–≤–Ω—è—Ç—å –∫–æ–ª–æ–Ω–∫—É —Å —Ü–µ–Ω–∞–º–∏ –≤–∞–ª—é—Ç.
            text += f"<code>{i[2] + ' ' * (22 - len(i[2]))}</code>{v}\n"
        return text.strip('\n')

    #–ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä –≤–∞–ª—é—Ç
    @staticmethod
    def get_price(message):
        response = requests.get('https://www.cbr-xml-daily.ru/latest.js').text
        js = (json.loads(response))['rates']
        values = message.split(' ')
        rates = {'RUB': 1}
        for i, v in js.items():
            for cur in keys.values():
                if i == cur[0]:
                    rates.update({i: v})

        if len(values) != 3:
            raise APIException('‚ùó–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–ª–∂–Ω–æ —Ä–∞–≤–Ω—è—Ç—å—Å—è 3‚ùó')

        base, quote, amount = values
        base = base.lower()
        quote = quote.lower()

        if quote == base:
            raise APIException('‚ùó–ù–µ–ª—å–∑—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã‚ùó')

        if quote not in keys or base not in keys:
            raise APIException(f'‚ùó–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–ª—é—á '
                               f'–≤–∞–ª—é—Ç—ã {"‚Ññ1" if base not in keys else "‚Ññ2"}‚ùó')
        try:
            amount = float(amount)
        except ValueError:
            raise APIException('‚ùó–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ‚ùó')

        base_ticker = keys[base][0]
        quote_ticker = keys[quote][0]

        result = f'{amount} {keys[base][1]} = ' \
                 f'{round(rates[quote_ticker] / rates[base_ticker] * amount, 2)} ' \
                 f'{keys[quote][1]}'
        return result  # –í –≤—ã–≤–æ–¥–µ –≤–º–µ—Å—Ç–æ –≤–≤–æ–¥–∏–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–ª—é—á–µ–π –≤–∞–ª—é—Ç —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º unicode-—Å–∏–º–≤–æ–ª—ã —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—É—Ç–∞–Ω–∏—Ü—ã —Å –æ–∫–æ–Ω—á–∞–Ω–∏—è–º–∏


#–ö–ª–∞—Å—Å –∫–Ω–æ–ø–æ–∫
class Kbds:
    @staticmethod
    def get_back_btn():
        back = types.InlineKeyboardMarkup()
        return back.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back'))

    @staticmethod
    def get_replykbd():
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        ratesbtn = types.KeyboardButton('üìà –ö—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç')
        newsbtn = types.KeyboardButton('üì∞ –ù–æ–≤–æ—Å—Ç–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤')
        return markup.add(ratesbtn, newsbtn)


class News:
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π, —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Ö —Ç–µ–∫—Å—Ç—ã –∏ –∫–Ω–æ–ø–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∞—Ç–æ–π.
    # –ú–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (10-15,–Ω–∞–ø—Ä–∏–º–µ—Ä),
    # —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏–∏ –∫–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∞—Ç–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å, –Ω–æ —è —Ä–µ—à–∏–ª –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫.
    @staticmethod
    def get_news(bot, message=None, call=None):
        response = requests.get('https://1prime.ru/Forex/', HEADERS).text
        bs = BeautifulSoup(response, 'lxml')
        main = bs.find('div', class_='rubric-list__articles').find_all('article', class_='rubric-list__article')
        latestdate = main[0].find('time').get('datetime')[:10]
        latestnews = []
        for a in main:
            if a.find('time').get('datetime')[:10] == latestdate:
                latestnews.append(a)
        result = f'‚ö° <b>–ù–æ–≤–æ—Å—Ç–∏ –Ω–∞ {".".join(latestdate.split("-")[::-1])}:</b> ‚ö°\n\n'

        count = 0
        urls_list = []

        for i in latestnews:
            count += 1
            temp = i.find_all('a')[1]
            url = 'https://1prime.ru/' + temp.get('href')
            urls_list.append(url)
            title = temp.getText()
            result += f'{count})  {title}.\n'

        inline_markup = types.InlineKeyboardMarkup(row_width=5)
        num = 0
        btns = []
        for url in urls_list:
            num += 1
            btns.append(types.InlineKeyboardButton(f'{num}', callback_data=f'{url}'))
        inline_markup.add(*btns)

        if message:
            return bot.send_message(message.chat.id, result, reply_markup=inline_markup)
        elif call:
            return bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                         text=result, reply_markup=inline_markup)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏, —Ä–∞—Å–ø–∞—Ä—Å–∏–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ callback_data.
    @staticmethod
    def get_text(bot, call):
        response = requests.get(call.data, HEADERS).text
        bs = BeautifulSoup(response, 'lxml')
        text = ''
        title = bs.find(class_='article-header__title').get_text()
        text += f"‚ö° <b>{title}</b>\n\n"
        article_lst = bs.find('div', class_='article-body__content').find_all('p')
        for p in article_lst:
            if p.get_text().isupper():
                text += f'\n      {p.get_text()}\n\n'
            else:
                text += f'      {p.get_text()}\n'
        text += f'\nüëâ  <a href="{call.data}">–ò—Å—Ç–æ—á–Ω–∏–∫</a>'
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–ª—è 1 —Å–æ–æ–±—â–µ–Ω–∏—è - –æ–±—Ä–µ–∑–∞–µ–º –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫. –≠—Ç–æ –±—ã–≤–∞–µ—Ç –∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–æ.
        if len(text) > 4000:
            text = text[:4000]
            text += f'...  \n\nüëâ  <a href="{call.data}"> –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ</a>'

        return bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,
                                     text=text, reply_markup=Kbds.get_back_btn(),
                                     disable_web_page_preview=True)